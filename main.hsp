









	cls
	screen 0, 135, 330, , window_x, window_y
	gsel 0, zenmen
	title "tptst"
	
	syscolor 15
	boxf			;背景をグレーに塗りつぶし
	
	color 0,0,0			;文字色を黒

	onexit *save





; ドアトラップ用変数
			doortrap(0) = "HP減少"
			doortrap(1) = "HP回復"
			doortrap(2) = "速度2倍"
			doortrap(3) = "速度1/2"
			doortrap(4) = "盲目"
			doortrap(5) = "テレポート"
			doortrap(6) = "アイテム破壊"
			doortrap(7) = "充電"
			doortrap(8) = "---MG---"
			doortrap(9) = "全快"
			doortrap(10) = "Madness"
			doortrap(11) = "Psi減少"
			doortrap(12) = "Psi回復"


;ドア未鑑定色1
			doorcolor(0,0) = 255		;白
			doorlolor(0,1) = 255		;黄
			doorcolor(0,2) = 0			;緑
			doorcolor(0,3) = 255		;オレンジ
			doorcolor(0,4) = 255		;赤
			doorcolor(0,5) = 255		;ピンク
			doorcolor(0,6) = 153		;紫
			doorcolor(0,7) = 0			;青
			doorcolor(0,8) = 0			;黒

;ドア未鑑定色2
			doorcolor(1,0) = 255
			doorcolor(1,1) = 255
			doorcolor(1,2) = 255
			doorcolor(1,3) = 128
			doorcolor(1,4) = 0
			doorcolor(1,5) = 105
			doorcolor(1,6) = 0
			doorcolor(1,7) = 0
			doorcolor(1,8) = 0

;ドア未鑑定色3
			doorcolor(2,0) = 255
			doorcolor(2,1) = 0
			doorcolor(2,2) = 255
			doorcolor(2,3) = 0
			doorcolor(2,4) = 0
			doorcolor(2,5) = 180
			doorcolor(2,6) = 204
			doorcolor(2,7) = 255
			doorcolor(2,8) = 0







; 左側

	objsize 80,
	pos 4,



	kuri_door = 1			; ドアトラップ表示
*doortrap_loop
	if 8 > kuri_door {
		chkbox ""+doortrap(kuri_door), doortrap_chkbox(kuri_door)
		kuri_door ++
		goto *doortrap_loop
	}


	mes ""+doortrap(8)			; MG区切り


	kuri_door ++			; ドアトラップ表示　MG
	doortrap_chkbox(kuri_door + 10) = 0

*doortrap_loop_mg
	if 13 > kuri_door {
		chkbox ""+doortrap(kuri_door), doortrap_chkbox(kuri_door)
		kuri_door ++
		goto *doortrap_loop_mg
	}


	button_pos_x = ginfo_cx			; 下部ボタンのための座標取得
	button_pos_y = ginfo_cy



; 右側


		sikaku(0) = 85			; 黒枠初期値
		sikaku(1) = 3
		sikaku(2) = 100
		sikaku(3) = 18




	sikaku_kazu = 0
*mikantei_door
	if 9 > sikaku_kazu : {
		color 0, 0, 0			; 黒枠色
		boxf sikaku(0), sikaku(1), sikaku(2), sikaku(3)			;黒枠

		;色四角
		color doorcolor(0,sikaku_kazu), doorcolor(1,sikaku_kazu), doorcolor(2,sikaku_kazu)
		boxf sikaku(0) + 1, sikaku(1) + 1, sikaku(2) - 1, sikaku(3) - 1

		;チェックボックス
		pos sikaku(0) + 30 , sikaku(1) -3
		chkbox "", doorcolor_chkbox(sikaku_kazu)


		sikaku(1) = sikaku(1) + 25			;枠移動
		sikaku(3) = sikaku(3) + 25


		sikaku_kazu ++
		goto *mikantei_door
	}

//	表示を直すために画面外に表示
		pos sikaku(0) + 80 , sikaku(1) -3
		chkbox "", doorcolor_chkbox(sikaku_kazu)





; 下部ボタン

	pos button_pos_x + 1, button_pos_y
	mes ""

	objsize 60,			; リセットボタン
	button "Reset", *reset


	pos button_pos_x + 67 , button_pos_y
	mes ""
	button "Config", *config			; 設定ボタン



; デバッグ用
;screen 10,

;	abc = 0
;*debug
;	if 13 > abc : {
;		mes doortrap_chkbox(abc)
;		abc = abc + 1
;		goto *debug
;	}


stop



*reset
	; 左側
	dim doortrap_chkbox, 16			; ドアトラップ

	; 右側
	dim	doorcolor_chkbox, 16		; チェックボックス


	goto *main









